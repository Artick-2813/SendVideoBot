from aiogram import types, Dispatcher
from DBase.Dbase import ChatIdDbase
from aiogram.dispatcher.filters import Text
from HandlersKeyboardBot.Keyboard import menu_markup, back_markup
from create_bot import bot, dp
from DBase.Dbase import select_show_info_video
from HandlersBot.SettingsVideo import conversion_duration_video, conversion_title_video


async def start_send_video(msg: types.Message):
    chat_id = msg.chat.id
    download_text = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –≤ –≤–∞—à —á–∞—Ç ‚ùó'

    await bot.send_message(chat_id, download_text, reply_markup=back_markup())
    
    @dp.message_handler(content_types=['video'])
    async def send_video(msg: types.Message):

        # Show or hidden info video
        show_info_video = select_show_info_video()

        chat_id = msg.chat.id
        # Info video
        id_video = msg.video.file_id
        file_name = msg.video.file_name
        duration_video = msg.video.duration
        title = conversion_title_video(file_name)
        duration = conversion_duration_video(duration_video)

        channel_id = ChatIdDbase(data=None).select_chat_id()

        try:
            if channel_id:
                if show_info_video == '–í—ã–∫–ª.':
                    await bot.send_video(channel_id, id_video)
                    await bot.send_message(chat_id, '–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ', reply_markup=menu_markup())

                else:
                    message = f'{title}\n' \
                              f'–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ: {duration}'
                    await bot.send_video(channel_id, id_video, caption=message)
                    await bot.send_message(chat_id, message)
                    await bot.send_message(chat_id, '–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ', reply_markup=menu_markup())

        except Exception as ex:
            print(ex)
            error = '–Ø –Ω–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ –≤ –≤–∞—à —á–∞—Ç,—Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ id –≤–∞—à–µ–≥–æ —á–∞—Ç–∞ –∏–ª–∏ –±—ã–ª –≤–≤–µ–¥–µ–Ω ' \
                    '–Ω–µ–ø—Ä–∞–≤–ª—å–Ω—ã–π id üòî.\n' \
                    '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π id –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–æ—Ç–∞ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π id ‚ùó'
            await bot.send_message(chat_id, error)


async def back_menu(msg: types.Message):
    chat_id = msg.chat.id

    await bot.send_message(chat_id, '–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –º–µ–Ω—é ‚¨Ö', reply_markup=menu_markup())


def register_handler_send_video(dp: Dispatcher):
    dp.register_message_handler(start_send_video, lambda call: call.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ –≤ —á–∞—Ç üì©')
    dp.register_message_handler(back_menu, Text(equals='–ù–∞–∑–∞–¥ üîô'))
